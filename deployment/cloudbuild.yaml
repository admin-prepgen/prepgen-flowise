steps:
  # Build single Flowise image for both main and worker services
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'build'
      - '-t'
      - '${_REGION}-docker.pkg.dev/${PROJECT_ID}/${_REPOSITORY}/flowise:${BUILD_ID}'
      - '-t'
      - '${_REGION}-docker.pkg.dev/${PROJECT_ID}/${_REPOSITORY}/flowise:latest'
      - '-f'
      - 'Dockerfile'
      - '.'
    id: 'build-flowise'

  # Push single image
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'push'
      - '--all-tags'
      - '${_REGION}-docker.pkg.dev/${PROJECT_ID}/${_REPOSITORY}/flowise'
    id: 'push-flowise'
    waitFor: ['build-flowise']

  # Deploy main service to Cloud Run
  - name: 'gcr.io/cloud-builders/gcloud'
    args:
      - 'run'
      - 'deploy'
      - 'flowise-main'
      - '--image=${_REGION}-docker.pkg.dev/${PROJECT_ID}/${_REPOSITORY}/flowise:${BUILD_ID}'
      - '--region=${_REGION}'
      - '--platform=managed'
      - '--allow-unauthenticated'
      - '--set-env-vars=MODE=main,DATABASE_TYPE=postgres,DATABASE_PORT=5432,DATABASE_SSL=true,NODE_TLS_REJECT_UNAUTHORIZED=0'
      - '--update-secrets=DATABASE_HOST=flowise-db-host:latest,DATABASE_NAME=flowise-db-name:latest,DATABASE_USER=flowise-db-user:latest,DATABASE_PASSWORD=flowise-db-password:latest,REDIS_HOST=flowise-redis-host:latest,REDIS_PASSWORD=flowise-redis-password:latest'
      - '--command='
      - '--args='
      - '--memory=2Gi'
      - '--cpu=2'
      - '--min-instances=0'
      - '--max-instances=10'
      - '--timeout=300'
      - '--concurrency=80'
      - '--port=3000'
      - '--vpc-connector=flowise-connector'
    id: 'deploy-main'
    waitFor: ['push-flowise']

  # Deploy worker service to Cloud Run
  - name: 'gcr.io/cloud-builders/gcloud'
    args:
      - 'run'
      - 'deploy'
      - 'flowise-worker'
      - '--image=${_REGION}-docker.pkg.dev/${PROJECT_ID}/${_REPOSITORY}/flowise:${BUILD_ID}'
      - '--region=${_REGION}'
      - '--platform=managed'
      - '--no-allow-unauthenticated'
      - '--set-env-vars=MODE=worker,DATABASE_TYPE=postgres,DATABASE_PORT=5432,DATABASE_SSL=true,NODE_TLS_REJECT_UNAUTHORIZED=0'
      - '--update-secrets=DATABASE_HOST=flowise-db-host:latest,DATABASE_NAME=flowise-db-name:latest,DATABASE_USER=flowise-db-user:latest,DATABASE_PASSWORD=flowise-db-password:latest,REDIS_HOST=flowise-redis-host:latest,REDIS_PASSWORD=flowise-redis-password:latest'
      - '--command='
      - '--args='
      - '--memory=2Gi'
      - '--cpu=2'
      - '--min-instances=1'
      - '--max-instances=3'
      - '--timeout=3600'
      - '--concurrency=1'
      - '--vpc-connector=flowise-connector'
      - '--no-cpu-throttling'
      - '--startup-probe=httpGet.path=/health,periodSeconds=10,timeoutSeconds=5,failureThreshold=6'
    id: 'deploy-worker'
    waitFor: ['push-flowise']

# Substitute variables
substitutions:
  _REGION: 'us-central1'
  _REPOSITORY: 'flowise-repo'

# Build options
options:
  machineType: 'E2_HIGHCPU_8'
  diskSizeGb: '100'
  logging: CLOUD_LOGGING_ONLY

# Build timeout
timeout: '1200s'

# Images to retain in artifact registry
images:
  - '${_REGION}-docker.pkg.dev/${PROJECT_ID}/${_REPOSITORY}/flowise:${BUILD_ID}'
  - '${_REGION}-docker.pkg.dev/${PROJECT_ID}/${_REPOSITORY}/flowise:latest'